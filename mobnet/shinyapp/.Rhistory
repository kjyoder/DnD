}
}
file.exists(file)
out_file = str_c(base_dir, "PM", subject, "_", out_seg, ".dat")
dat <- read_csv(file, col_names = FALSE, col_types = cols())
file
dat <- read_delim(file, ",", col_names = FALSE, col_types = cols())
dim(dat)
in_seg
in_seg = "csdSegNonmoralIncongruentWavelets"
file <- str_c(base_dir, "PM", subject, "_", in_seg, ".dat")
dat <- read_delim(file, ",", col_names = FALSE, col_types = cols())
require(tidyverse)
data <- tibble(x = seq(1,50),
e = rnorm(50, 0, .1))
data <- data %>%
mutate(y = x^2 + e)
mod1 <- lm(y ~ x, data = data)
mod2 <- lm(y ~ poly(x,2), data = data)
mod3 <- lm(y ~ poly(x,3), data = data)
mod10 <- lm(y ~ poly(x,10), data = data)
mod50 <- lm(y ~ poly(x,20), data = data)
plot(data$x, data$y, pch=20)
abline(lm(y ~ x, data=data))
lines(sort(data$x), fitted(mod2)[order(data$x)], col='red', type='l')
lines(sort(data$x), fitted(mod3)[order(data$x)], col='blue', type='l')
lines(sort(data$x), fitted(mod50)[order(data$x)], col='magenta', type='l')
legend(0,1, legend = c("Linear", "Poly2", "Poly3", "Poly20"),
col = c("black", "red", "blue", "magenta"), lty=1)
data %>%
ggplot(aes(x, y)) + geom_point() + geom_smooth(method = "lm", se=FALSE)
data <- tibble(x = seq(1,50),
e = rnorm(50, 0, .1))
data <- data %>%
mutate(y = x^2 + e)
mod1 <- lm(y ~ x, data = data)
mod2 <- lm(y ~ poly(x,2), data = data)
mod3 <- lm(y ~ poly(x,3), data = data)
mod10 <- lm(y ~ poly(x,10), data = data)
mod50 <- lm(y ~ poly(x,20), data = data)
plot(data$x, data$y, pch=20)
abline(lm(y ~ x, data=data))
lines(sort(data$x), fitted(mod2)[order(data$x)], col='red', type='l')
lines(sort(data$x), fitted(mod3)[order(data$x)], col='blue', type='l')
lines(sort(data$x), fitted(mod50)[order(data$x)], col='magenta', type='l')
legend(0,1, legend = c("Linear", "Poly2", "Poly3", "Poly20"),
col = c("black", "red", "blue", "magenta"), lty=1)
rnorm(50,0,.1)
x
data$x
data <- tibble(x = runif(50),
e = rnorm(50, 0, .1))
data <- data %>%
mutate(y = x^2 + e)
mod1 <- lm(y ~ x, data = data)
mod2 <- lm(y ~ poly(x,2), data = data)
mod3 <- lm(y ~ poly(x,3), data = data)
mod10 <- lm(y ~ poly(x,10), data = data)
mod50 <- lm(y ~ poly(x,20), data = data)
plot(data$x, data$y, pch=20)
abline(lm(y ~ x, data=data))
lines(sort(data$x), fitted(mod2)[order(data$x)], col='red', type='l')
lines(sort(data$x), fitted(mod3)[order(data$x)], col='blue', type='l')
lines(sort(data$x), fitted(mod50)[order(data$x)], col='magenta', type='l')
legend(0,1, legend = c("Linear", "Poly2", "Poly3", "Poly20"),
col = c("black", "red", "blue", "magenta"), lty=1)
data %>%
ggplot(aes(x, y)) + geom_point() + geom_smooth(method = "lm", se=FALSE)
data <- tibble(x = runif(50),
e = rnorm(50, 0, .1))
data <- data %>%
mutate(y = x^2 + e)
mod1 <- lm(y ~ x, data = data)
mod2 <- lm(y ~ poly(x,2), data = data)
mod3 <- lm(y ~ poly(x,3), data = data)
mod10 <- lm(y ~ poly(x,10), data = data)
mod50 <- lm(y ~ poly(x,20), data = data)
data$Linear <- predict(mod1)
data$Poly2 <- predict(mod2)
data$Poly3 <- predict(mod3)
data$Poly10 <- predict(mod10)
data$Poly20 <- predict(mod50)
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(aes(y = Linear))
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(aes(y = Linear)) +
geom_smooth(aes(y = Poly2)) +
geom_smooth(aes(y = Poly3)) +
geom_smooth(aes(y = Poly20))
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(aes(y = Linear, color=1)) +
geom_smooth(aes(y = Poly2, se=FALSE)) +
geom_smooth(aes(y = Poly3, se=FALSE)) +
geom_smooth(aes(y = Poly20, se=FALSE), color)
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(aes(y = Linear), colour=1) +
geom_smooth(aes(y = Poly2, se=FALSE)) +
geom_smooth(aes(y = Poly3, se=FALSE)) +
geom_smooth(aes(y = Poly20, se=FALSE), color)
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(aes(y = Linear), colour=1) +
geom_smooth(aes(y = Poly2, se=FALSE)) +
geom_smooth(aes(y = Poly3, se=FALSE)) +
geom_smooth(aes(y = Poly20, se=FALSE))
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(aes(y = Linear), colour=1) +
geom_smooth(aes(y = Poly2, se=FALSE), color=2) +
geom_smooth(aes(y = Poly3, se=FALSE)) +
geom_smooth(aes(y = Poly20, se=FALSE))
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(aes(y = Linear), se=FALSE, colour=1) +
geom_smooth(aes(y = Poly2), se=FALSE, color=2) +
geom_smooth(aes(y = Poly3), se=FALSE, color=3) +
geom_smooth(aes(y = Poly20), se=FALSE, color=4)
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(aes(y = Linear), se=FALSE, colour="dodgerblue1") +
geom_smooth(aes(y = Poly2), se=FALSE, color="black") +
geom_smooth(aes(y = Poly3), se=FALSE, color="firebrick1") +
geom_smooth(aes(y = Poly20), se=FALSE, color="magenta")
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(aes(y = Linear), se=FALSE, colour="dodgerblue1") +
geom_smooth(aes(y = Poly2), se=FALSE, color="black") +
geom_smooth(aes(y = Poly3), se=FALSE, color="firebrick1") +
geom_smooth(aes(y = Poly20), se=FALSE, color="green")
plot(data$x, data$Poly20)
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(aes(y = Linear), se=FALSE, colour="dodgerblue1") +
geom_smooth(aes(y = Poly2), se=FALSE, color="black") +
geom_smooth(aes(y = Poly3), se=FALSE, color="firebrick1") +
geom_line(aes(y = Poly20), se=FALSE, color="green")
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_smooth(aes(y = Linear), se=FALSE, colour="dodgerblue1") +
geom_smooth(aes(y = Poly2), se=FALSE, color="black") +
geom_smooth(aes(y = Poly3), se=FALSE, color="firebrick1") +
geom_line(aes(y = Poly20), color="green")
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = Linear), colour="dodgerblue1") +
geom_line(aes(y = Poly2), color="black") +
geom_line(aes(y = Poly3), color="firebrick1") +
geom_line(aes(y = Poly20), color="magenta")
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = Linear), colour="dodgerblue1") +
geom_line(aes(y = Poly2), color="black") +
geom_line(aes(y = Poly3), color="firebrick1") +
geom_line(aes(y = Poly20), color="magenta") +
theme_classic()
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = Linear), colour="dodgerblue1", size=1) +
geom_line(aes(y = Poly2), color="black") +
geom_line(aes(y = Poly3), color="firebrick1") +
geom_line(aes(y = Poly20), color="magenta") +
theme_classic()
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = Linear), colour="dodgerblue1", size=1) +
geom_line(aes(y = Poly2), color="black", size=2) +
geom_line(aes(y = Poly3), color="firebrick1", size=1) +
geom_line(aes(y = Poly20), color="magenta", size=1) +
theme_classic()
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = Linear), colour="dodgerblue1", size=1) +
geom_line(aes(y = Poly2), color="black", size=1) +
geom_line(aes(y = Poly3), color="firebrick1", size=1) +
geom_line(aes(y = Poly20), color="magenta", size=1) +
theme_classic()
data <- tibble(x = runif(50),
e = rnorm(50, 0, .1))
data <- data %>%
mutate(y = x^2 + e) %>%
mutate(true_y = x^2)
mod1 <- lm(y ~ x, data = data)
mod2 <- lm(y ~ poly(x,2), data = data)
mod3 <- lm(y ~ poly(x,3), data = data)
mod10 <- lm(y ~ poly(x,10), data = data)
mod50 <- lm(y ~ poly(x,20), data = data)
data$Linear <- predict(mod1)
data$Poly2 <- predict(mod2)
data$Poly3 <- predict(mod3)
data$Poly10 <- predict(mod10)
data$Poly20 <- predict(mod50)
plot(data$x, data$y, pch=20)
abline(lm(y ~ x, data=data))
lines(sort(data$x), fitted(mod2)[order(data$x)], col='red', type='l')
lines(sort(data$x), fitted(mod3)[order(data$x)], col='blue', type='l')
lines(sort(data$x), fitted(mod50)[order(data$x)], col='magenta', type='l')
legend(0,1, legend = c("Linear", "Poly2", "Poly3", "Poly20"),
col = c("black", "red", "blue", "magenta"), lty=1)
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = Linear), colour="dodgerblue1", size=1) +
geom_line(aes(y = true_y), color="black", size=1) +
geom_line(aes(y = Poly3), color="firebrick1", size=1) +
geom_line(aes(y = Poly20), color="magenta", size=1) +
theme_classic()
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = true_y), color="black", size=1) +
geom_line(aes(y = Linear), colour="dodgerblue1", size=1) +
geom_line(aes(y = Poly3), color="firebrick1", size=1) +
geom_line(aes(y = Poly20), color="magenta", size=1) +
theme_classic() +
scale_color_discrete(name = "Fit", labels = c(
"True Relationship",
"Linear",
"Poly 3",
"Poly 20"
))
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = true_y), color="black", size=1) +
geom_line(aes(y = Linear), colour="dodgerblue1", size=1) +
geom_line(aes(y = Poly3), color="firebrick1", size=1) +
geom_line(aes(y = Poly20), color="magenta", size=1) +
scale_color_discrete(name = "Fit", labels = c(
"True Relationship",
"Linear",
"Poly 3",
"Poly 20"
))
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = true_y), color="black", size=1) +
geom_line(aes(y = Linear), colour="dodgerblue1", size=1) +
geom_line(aes(y = Poly3), color="firebrick1", size=1) +
geom_line(aes(y = Poly20), color="magenta", size=1) +
scale_color_discrete(name = "Fit", labels = c(
"Filler",
"True Relationship",
"Linear",
"Poly 3",
"Poly 20"
))
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = true_y, color="black"), size=1) +
geom_line(aes(y = Linear, colour="dodgerblue1"), size=1) +
geom_line(aes(y = Poly3, color="firebrick1"), size=1) +
geom_line(aes(y = Poly20, color="magenta"), size=1) +
scale_color_discrete(name = "Fit", labels = c(
"True Relationship",
"Linear",
"Poly 3",
"Poly 20"
))
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = true_y, color="black"), size=1) +
geom_line(aes(y = Linear, colour="dodgerblue1"), size=1) +
geom_line(aes(y = Poly3, color="firebrick1"), size=1) +
geom_line(aes(y = Poly20, color="magenta"), size=1) +
scale_color_discrete(name = "Fit", labels = c(
"True Relationship",
"Linear",
"Poly 3",
"Poly 20"
)) +
theme_classic()
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = true_y, color="black"), size=1) +
geom_line(aes(y = Linear, colour="dodgerblue1"), size=1) +
geom_line(aes(y = Poly3, color="firebrick1"), size=1) +
geom_line(aes(y = Poly20, color="magenta"), size=1) +
scale_color_identity(name = "Model Fit",
labels = c(
"True Relationship",
"Linear",
"Poly 3",
"Poly 20"
),
breaks = c("black", "dodgerblue1", "firebrick1", "magenta"),
guide = "legend") +
theme_classic()
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = true_y, color="black"), size=1) +
geom_line(aes(y = Linear, colour="dodgerblue1"), size=1) +
geom_line(aes(y = Poly2, colour="green4"), size=1) +
geom_line(aes(y = Poly3, color="firebrick1"), size=1) +
geom_line(aes(y = Poly20, color="magenta"), size=1) +
scale_color_identity(name = "Model Fit",
labels = c(
"Truth",
"Linear",
"Poly 2",
"Poly 3",
"Poly 20"
),
breaks = c("black", "dodgerblue1", "green4", "firebrick1", "magenta"),
guide = "legend") +
theme_classic()
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = true_y, color="black"), size=1) +
geom_line(aes(y = Linear, colour="dodgerblue1"), size=1) +
geom_line(aes(y = Poly2, colour="green4"), size=1) +
geom_line(aes(y = Poly20, color="magenta"), size=1) +
scale_color_identity(name = "Model Fit",
labels = c(
"Truth",
"Linear",
"Poly 2",
"Poly 20"
),
breaks = c("black", "dodgerblue1", "green4", "magenta"),
guide = "legend") +
theme_classic()
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = true_y, color="black"), size=1) +
geom_line(aes(y = Linear, colour="dodgerblue1"), size=1) +
geom_line(aes(y = Poly2, colour="firebrick1"), size=1) +
geom_line(aes(y = Poly20, color="magenta"), size=1) +
scale_color_identity(name = "Model Fit",
labels = c(
"Truth",
"Linear",
"Poly 2",
"Poly 20"
),
breaks = c("black", "dodgerblue1", "firebrick1", "magenta"),
guide = "legend") +
theme_classic()
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = true_y, color="black"), size=1) +
geom_line(aes(y = Linear, colour="dodgerblue1"), size=1) +
geom_line(aes(y = Poly2, colour="firebrick1"), size=1) +
geom_line(aes(y = Poly20, color="magenta"), size=1) +
scale_color_identity(name = "Model Fit",
labels = c(
"Truth",
"Linear",
"Poly 2",
"Poly 20"
),
breaks = c("black", "dodgerblue1", "firebrick1", "magenta"),
guide = "legend") +
theme_classic()
ggsave("Overfit.png")
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = true_y, color="black"), size=1) +
geom_line(aes(y = Linear, colour="dodgerblue1"), size=1) +
geom_line(aes(y = Poly2, colour="firebrick1"), size=1) +
geom_line(aes(y = Poly20, color="magenta"), size=1) +
scale_color_identity(name = "Model Fit",
labels = c(
"Truth",
"Linear",
"Poly 2",
"Poly 20"
),
breaks = c("black", "dodgerblue1", "firebrick1", "magenta"),
guide = "legend") +
theme_classic()
ggsave("Overfit.png", height=5, width=5)
data %>%
ggplot(aes(x, y)) +
geom_point() +
geom_line(aes(y = true_y, color="black"), size=1) +
geom_line(aes(y = Linear, colour="dodgerblue1"), size=1) +
geom_line(aes(y = Poly2, colour="firebrick1"), size=1) +
geom_line(aes(y = Poly20, color="magenta"), size=1) +
scale_color_identity(name = "Model Fit",
labels = c(
"Truth",
"Linear",
"Poly 2",
"Poly 20"
),
breaks = c("black", "dodgerblue1", "firebrick1", "magenta"),
guide = "legend") +
theme_classic()
ggsave("Overfit.png", height=5, width=6)
install.packages('hBayesDM', dependencies=TRUE)
remove.packages("rstan")
Sys.setenv(DOWNLOAD_STATIC_LIBV8 = 1)
install.packages("rstan", repos = "https://cloud.r_project.org", dependencies = t)
install.packages("rstan", repos = "https://cloud.r_project.org", dependencies = TRUE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
example(stan_model, package = "rstan", run.dontrun = TRUE)
library("rstan")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library('rstan')
example(stan_model, package = "rstan", run.dontrun = TRUE)
install.packages("hBayesDM", dependencies=TRUE)
remove.packages("hBayesDM")
Sys.setenv(BUILD_ALL="true")
Sys.setenv(MAKEFLAGS="-j 4")
install.packages("hBayesDM")
library('hBayesDM')
dataPath = system.file("extdata/gng_exampleData.txt", package="hBayesDM")
output1 = gng_m1(data="example", niter=2000, nwarmup=1000, nchain=4, ncore=4)
output1$fit
plot(outpu1, type="trace", fontSize=11)
plot(output1, type="trace", fontSize=11)
plot(output1)
?gng_m1
?gng_m2
?gng_m3
?gng_m4
load("extdata/gng_exampleData.txt")
View("extdata/gng_exampleData.txt")
dataPath
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?geom_density
ggplot(d %>% filter(lambda==1), aes(value)) + goem_density()
ggplot(d %>% filter(lambda==1), aes(value)) + geom_density()
source('~/.active-rstudio-document', echo=TRUE)
mean(rexp(1000, rate=1))
mean(rexp(1000, rate=2))
mean(rexp(1000, rate=.5))
mean(rexp(1000, rate=3))
mean(rexp(1000, rate=1/3))
quantile(rexp(1000, rate=1/3))
max = 5
min = 2
(max-min) + min
runif(10) * (max-min) + min
hist(runif(1000) * (max-min) + min)
hist(runif(1000) * (max-min) + min)
hist(runif(1000) * (max-min) + min)
hist(runif(1000) * (max-min) + min)
hist(runif(1000) * (max-min) + min)
hist(runif(1000) * (max-min) + min)
hist(runif(1000) * (max-min) + min)
hist(-log(runif(1000) * (max-min) + min)/(1/3))
max=12
min=1
hist(-log(runif(1000) * (max-min) + min)/(1/3))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
lists
l
source('~/.active-rstudio-document', echo=TRUE)
lists
source('~/.active-rstudio-document', echo=TRUE)
lists
list
list %>% ggplot(x=Emotional_Valence, y=Emotional_Arousal) + geom_point()
list %>% ggplot(aes(x=Emotional_Valence, y=Emotional_Arousal)) + geom_point()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
require(tidyverse)
require(readxl)
d <- read_xlsx('/Users/Keith Yoder/Desktop/MoralChoiceTest_October+5,+2021_09.17/MoralChoiceTest_October 5, 2021_09.17.xlsx', skip=1)
d
d %>% filter(!is.na("Please enter your age in years"))
d %>% filter(!is.na(`Please enter your age in years`))
d_real <- d %>% filter(!is.na(`Please enter your age in years`))
d_real <- d %>% filter(!is.na(`Please enter your age in years`))
d_real$SID <- factor(d_real$`Response ID`)
d_real <- d %>% filter(!is.na(`Please enter your age in years`))
d_real$SID <- factor(d_real$`Response ID`)
install.packages('janitor')
install.packages("janitor")
install.packages("janitor")
setwd('c:/Users/Keith Yoder/repos/DnD/mobnet/shinyapp/')
library(rsconnect)
deployApp()
deployApp()
deployApp()
